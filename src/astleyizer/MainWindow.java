/*
 * MainWindow.java
 *
 * Created on April 25, 2008, 5:59 PM
 * 
 * Filters for open file dialogs
 * Back up file before overwriting
 * Controller for radio buttons
 * Astleyize all files in directory
 */

package astleyizer;

import java.io.*;
import javax.swing.*;
import javax.swing.JFileChooser;
import org.jaudiotagger.audio.*;
import org.jaudiotagger.tag.*;

/**
 *
 * @author  Tommy MacWilliam
 */
public class MainWindow extends javax.swing.JFrame {
    
    /** Creates new form MainWindow */
    public MainWindow() {
        initComponents();
        // put radio buttons into a group
        ButtonGroup radioButtons = new ButtonGroup();
        radioButtons.add(this.rbSelectDirs);
        radioButtons.add(this.rbSelectFile);
    }
    
    private void astleyizeFile(File readFile, String path) {
        try {
            // back up file first
            this.backupFile(readFile, path);

            // save original file name
            String oldFilePath = readFile.getAbsolutePath();
            // create read ID3 objects
            AudioFile readAudioFile = AudioFileIO.read(readFile);
            Tag readTag = readAudioFile.getTag();

            // save all tag information from original song
            String track = readTag.getFirstTitle();
            String artist = readTag.getFirstArtist();
            String album = readTag.getFirstAlbum();
            String year = readTag.getFirstYear();
            String genre = readTag.getFirstGenre();
            String comment = readTag.getFirstComment();

            // delete original file
            readFile.delete();
            // create file objects
            String rickRollPath = this.txtAstleyFile.getText();
            File rickRoll = new File(rickRollPath);
            File writeFile = new File(oldFilePath);
            writeFile.createNewFile();

            // create input/output streams
            InputStream in = new FileInputStream(rickRoll);
            OutputStream out = new FileOutputStream(writeFile);
            // create stream buffers for copy
            byte[] buf = new byte[1024];
            int len;
            // overwrite contents of read file with RickRoll
            while((len = in.read(buf)) > 0) {
                out.write(buf, 0, len);
            }
            // close file streams
            in.close();
            out.close();
            
            // create write ID3 objects after file copy
            AudioFile writeAudioFile = AudioFileIO.read(writeFile);
            Tag writeTag = writeAudioFile.getTag();
            
            // change ID3 information of RickRoll
            writeTag.setTitle(track);
            writeTag.setArtist(artist);
            writeTag.setAlbum(album);
            writeTag.setYear(year);
            writeTag.setGenre(genre);
            writeTag.setComment(comment);
            writeAudioFile.commit();
        }
        catch (Exception e) {
            e.printStackTrace();
        }
    }
    
    private void backupFile(File readFile, String path) {
        try {
            String newDirPath = path + File.separator + "lol";
            // Create new directory
            File newDir = new File(newDirPath);
            newDir.mkdir();
            // Create new file to write to with original file name
            String writeFilePath = path + File.separator + "lol" + File.separator + readFile.getName();
            File writeFile = new File(writeFilePath);
            // Create input/output streams
            InputStream in = new FileInputStream(readFile);
            OutputStream out = new FileOutputStream(writeFile);
            // Create stream buffers for copy
            byte[] buf = new byte[1024];
            int len;
            // Overwrite contents of read file with RickRoll
            while((len = in.read(buf)) > 0) {
                out.write(buf, 0, len);
            }
            // Close file streams
            in.close();
            out.close();
        }
        catch (Exception e) {
            System.out.println(e.getMessage());
        }
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblSelectDir = new javax.swing.JLabel();
        btnBrowseDirs = new javax.swing.JButton();
        btnAstleyize = new javax.swing.JButton();
        lblSelectFile = new javax.swing.JLabel();
        txtSelectFile = new javax.swing.JTextField();
        txtSelectDir = new javax.swing.JTextField();
        btnBrowseFiles = new javax.swing.JButton();
        rbSelectFile = new javax.swing.JRadioButton();
        rbSelectDirs = new javax.swing.JRadioButton();
        txtAstleyFile = new javax.swing.JTextField();
        btnBrowse = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Astleyizer");

        lblSelectDir.setText("Songs directory:");

        btnBrowseDirs.setText("Browse");
        btnBrowseDirs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBrowseDirsActionPerformed(evt);
            }
        });

        btnAstleyize.setText("Astleyize!");
        btnAstleyize.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAstleyizeActionPerformed(evt);
            }
        });

        lblSelectFile.setText("Song to replace:");

        btnBrowseFiles.setText("Browse");
        btnBrowseFiles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBrowseFilesActionPerformed(evt);
            }
        });

        btnBrowse.setText("Browse");
        btnBrowse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBrowseActionPerformed(evt);
            }
        });

        jLabel1.setText("New song:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnAstleyize)
                        .addGap(191, 191, 191))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(rbSelectDirs)
                                    .addComponent(rbSelectFile))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblSelectDir)
                                    .addComponent(lblSelectFile)))
                            .addComponent(jLabel1))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(4, 4, 4)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(txtSelectDir, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 293, Short.MAX_VALUE)
                                    .addComponent(txtSelectFile, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 293, Short.MAX_VALUE)))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtAstleyFile, javax.swing.GroupLayout.DEFAULT_SIZE, 285, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnBrowseFiles)
                            .addComponent(btnBrowseDirs)
                            .addComponent(btnBrowse))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(16, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnBrowse)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtAstleyFile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel1)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(btnBrowseFiles)
                        .addGap(42, 42, 42))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(rbSelectFile, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(rbSelectDirs, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 3, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtSelectFile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblSelectFile))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblSelectDir)
                            .addComponent(txtSelectDir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnBrowseDirs))
                        .addGap(2, 2, 2)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnAstleyize)
                .addContainerGap())
        );

        lblSelectDir.getAccessibleContext().setAccessibleName("lblSelectDir");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBrowseDirsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBrowseDirsActionPerformed
        // Show open file dialog for directory
        JFileChooser openDialog = new JFileChooser();
        openDialog.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        int returnVal = openDialog.showOpenDialog(this);
        if(returnVal == JFileChooser.APPROVE_OPTION) {
            // Display file path in text box, not just folder name
            File selectedDir = new File(openDialog.getSelectedFile().getAbsolutePath());
            this.txtSelectDir.setText(selectedDir.getAbsolutePath());
        }
        this.rbSelectDirs.setSelected(true);
}//GEN-LAST:event_btnBrowseDirsActionPerformed

    private void btnAstleyizeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAstleyizeActionPerformed
        // Astleyize file
        if(this.rbSelectFile.isSelected()) {
            String filePath = this.txtSelectFile.getText();
            filePath = filePath.substring(0, filePath.lastIndexOf(File.separator));
            File readFile = new File(this.txtSelectFile.getText());
            this.astleyizeFile(readFile,filePath);
        }
        // Astleyize directory
        else if(this.rbSelectDirs.isSelected()) {
            // Get directory from text box
            File readDir = new File(this.txtSelectDir.getText());
            // Get array of all files in directory
            // String[] files = readDir.list();
            File[] files = readDir.listFiles();
            // Astleyize all files in directory
            for(int i = 0; i < files.length; i++) {
                // Only alter music files to avoid ID3 error
                if((files[i].getName().contains(".mp3")) || (files[i].getName().contains(".m4a"))) {
                    this.astleyizeFile(files[i], this.txtSelectDir.getText());
                }
                else {
                    continue;
                }
            }
        }
        // Do nothing if neither button is selected
        else if(!this.rbSelectFile.isSelected() && !this.rbSelectDirs.isSelected()) { }
}//GEN-LAST:event_btnAstleyizeActionPerformed

    private void btnBrowseFilesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBrowseFilesActionPerformed
        // Show open file dialog for single file
        JFileChooser openDialog = new JFileChooser();
        int returnVal = openDialog.showOpenDialog(this);
        if(returnVal == JFileChooser.APPROVE_OPTION) {
            this.txtSelectFile.setText(openDialog.getSelectedFile().getAbsolutePath());
        }
        this.rbSelectFile.setSelected(true);
}//GEN-LAST:event_btnBrowseFilesActionPerformed

    private void btnBrowseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBrowseActionPerformed
        // Show open file dialog for single file
        JFileChooser openDialog = new JFileChooser();
        int returnVal = openDialog.showOpenDialog(this);
        if(returnVal == JFileChooser.APPROVE_OPTION) {
            this.txtAstleyFile.setText(openDialog.getSelectedFile().getAbsolutePath());
        }
    }//GEN-LAST:event_btnBrowseActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainWindow().setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAstleyize;
    private javax.swing.JButton btnBrowse;
    private javax.swing.JButton btnBrowseDirs;
    private javax.swing.JButton btnBrowseFiles;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel lblSelectDir;
    private javax.swing.JLabel lblSelectFile;
    private javax.swing.JRadioButton rbSelectDirs;
    private javax.swing.JRadioButton rbSelectFile;
    private javax.swing.JTextField txtAstleyFile;
    private javax.swing.JTextField txtSelectDir;
    private javax.swing.JTextField txtSelectFile;
    // End of variables declaration//GEN-END:variables
    
}
